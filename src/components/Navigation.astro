---
const navItems = [
  { href: "/", label: "Home" },
  { href: "#about", label: "About" },
  { href: "#education", label: "Education" },
  { href: "#research", label: "Research" },
  { href: "#portfolio", label: "Portfolio" },
  { href: "#awards", label: "Awards" },
  { href: "/blog", label: "Blog" },
  { href: "/gallery", label: "Gallery" },
  { href: "#contact", label: "Contact" },
];
---

<header class="fixed w-full top-0 z-40 bg-white/90 backdrop-blur-md border-b border-gray-100">
  <nav class="max-w-6xl mx-auto px-4">
    <div class="flex justify-between h-16">
      <a href="/" class="flex items-center font-bold text-xl text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-teal-400">
        Peiyang Li
      </a>
      
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map(({ href, label }) => (
          <a
            href={href}
            class="text-gray-600 hover:text-gray-900 transition-all duration-300 text-sm nav-link relative after:content-[''] after:absolute after:w-full after:h-0.5 after:bg-gradient-to-r after:from-blue-500 after:to-teal-400 after:left-0 after:-bottom-1 after:rounded-full after:opacity-0 after:transform after:scale-x-0 after:transition-all hover:after:opacity-100 hover:after:scale-x-100"
          >
            {label}
          </a>
        ))}
      </div>

      <button id="open-menu" class="md:hidden p-2" aria-label="Menu">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        if (!href) return;
        
        // If it's a page link (not an anchor), let it navigate normally
        if (href === '/' || href.startsWith('/')) {
          return;
        }
        
        // For anchor links, handle smooth scrolling
        e.preventDefault();
        const targetId = href.replace('#', '');
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          targetElement.scrollIntoView({ behavior: 'smooth' });
          history.pushState(null, '', href);
        }
      });
    });
  });
</script>
