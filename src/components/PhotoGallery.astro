---
// 直接定义图片列表，而不是从文件系统读取
const images = [
  {
    src: "https://i.imgur.com/fJwGkA5.jpg",
    alt: "Gallery Image 1"
  },
  {
    src: "https://i.imgur.com/R2zl7CC.jpg",
    alt: "Gallery Image 2"
  },
  {
    src: "https://i.imgur.com/Rj7RQYS.jpg",
    alt: "Gallery Image 3"
  },
  {
    src: "https://i.imgur.com/7qM9JJr.jpg",
    alt: "Gallery Image 4"
  },
  {
    src: "https://i.imgur.com/XIKmx4M.jpg",
    alt: "Gallery Image 5"
  }
];
---

<div class="fixed inset-0 bg-black">
  {images.map((image, index) => (
    <div 
      class="absolute inset-0 opacity-0 transition-opacity duration-1000 ease-in-out gallery-slide"
      data-index={index}
    >
      <img 
        src={image.src}
        alt={image.alt}
        class="w-full h-full object-contain"
        loading={index === 0 ? "eager" : "lazy"}
      />
    </div>
  ))}
</div>

<script>
  let currentSlide = 0;
  const slides = document.querySelectorAll('.gallery-slide');
  const totalSlides = slides.length;
  
  function showSlide(index: number) {
    // 隐藏所有幻灯片
    slides.forEach(slide => {
      slide.classList.remove('opacity-100');
      slide.classList.add('opacity-0');
    });
    
    // 显示当前幻灯片
    const slide = slides[index];
    if (slide) {
      slide.classList.remove('opacity-0');
      slide.classList.add('opacity-100');
    }
  }
  
  function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    showSlide(currentSlide);
  }
  
  // 初始显示第一张幻灯片
  showSlide(0);
  
  // 每 5 秒切换一次
  setInterval(nextSlide, 5000);
  
  // 添加键盘控制
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowRight' || e.key === ' ') {
      nextSlide();
    } else if (e.key === 'ArrowLeft') {
      currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      showSlide(currentSlide);
    } else if (e.key === 'Escape') {
      window.location.href = '/';
    }
  });
  
  // 添加触摸控制
  let touchStartX = 0;
  document.addEventListener('touchstart', (e) => {
    touchStartX = e.touches[0].clientX;
  });
  
  document.addEventListener('touchend', (e) => {
    const touchEndX = e.changedTouches[0].clientX;
    const diff = touchEndX - touchStartX;
    
    if (Math.abs(diff) > 50) { // 最小滑动距离
      if (diff > 0) {
        // 向右滑动，显示上一张
        currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      } else {
        // 向左滑动，显示下一张
        currentSlide = (currentSlide + 1) % totalSlides;
      }
      showSlide(currentSlide);
    }
  });
</script> 